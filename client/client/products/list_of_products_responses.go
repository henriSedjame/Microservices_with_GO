// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/hsedjame/products-api/client/models"
)

// ListOfProductsReader is a Reader for the ListOfProducts structure.
type ListOfProductsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListOfProductsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListOfProductsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListOfProductsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListOfProductsOK creates a ListOfProductsOK with default headers values
func NewListOfProductsOK() *ListOfProductsOK {
	return &ListOfProductsOK{}
}

/*ListOfProductsOK handles this case with default header values.

product found
*/
type ListOfProductsOK struct {
	Payload []*models.Product
}

func (o *ListOfProductsOK) Error() string {
	return fmt.Sprintf("[GET /products][%d] listOfProductsOK  %+v", 200, o.Payload)
}

func (o *ListOfProductsOK) GetPayload() []*models.Product {
	return o.Payload
}

func (o *ListOfProductsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListOfProductsBadRequest creates a ListOfProductsBadRequest with default headers values
func NewListOfProductsBadRequest() *ListOfProductsBadRequest {
	return &ListOfProductsBadRequest{}
}

/*ListOfProductsBadRequest handles this case with default header values.

bad request
*/
type ListOfProductsBadRequest struct {
	Payload *models.GenericError
}

func (o *ListOfProductsBadRequest) Error() string {
	return fmt.Sprintf("[GET /products][%d] listOfProductsBadRequest  %+v", 400, o.Payload)
}

func (o *ListOfProductsBadRequest) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ListOfProductsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
