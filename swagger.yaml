basePath: /
consumes:
- application/json
definitions:
  GenericError:
    description: GenericError represents the generic error of application
    properties:
      Message:
        description: the error message
        type: string
    type: object
    x-go-package: github.com/hsedjame/products-api/src/main/models
  Product:
    description: Product represents the product for this application
    properties:
      description:
        description: the description for this product
        type: string
        x-go-name: Description
      id:
        description: the id for this product
        format: int64
        type: integer
        x-go-name: ID
      name:
        description: the name for this product
        type: string
        x-go-name: Name
      price:
        description: the price for this product
        format: float
        minimum: 0
        type: number
        x-go-name: Price
      sku:
        description: the sku for this product
        pattern: '[a-z]+-[a-z]+-[a-z]+'
        type: string
        x-go-name: SKU
    required:
    - id
    - name
    - sku
    type: object
    x-go-package: github.com/hsedjame/products-api/src/main/models
  ValidationError:
    description: ValidationError represents the error occured when request body is not valid
    properties:
      Messages:
        description: the error message
        type: string
    type: object
    x-go-package: github.com/hsedjame/products-api/src/main/models
host: localhost
info:
  description: |-
    the purpose of this application is to provide an application
    that is using plain go code to define an API

    This should demonstrate all the possible comment annotations
    that are available to turn go code into a fully compliant swagger 2.0 spec
  termsOfService: there are no TOS at this moment, use at your own risk we take no responsibility
  title: Product API.
  version: 0.0.1
paths:
  /products:
    get:
      consumes:
      - application/json
      description: Retrieve list of all available products
      operationId: listOfProducts
      produces:
      - application/json
      responses:
        "200":
          description: product found
          schema:
            items:
              $ref: '#/definitions/Product'
            type: array
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/GenericError'
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product
      operationId: createProduct
      parameters:
      - description: body of request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Product'
      produces:
      - application/json
      responses:
        "200":
          description: product found
          schema:
            items:
              $ref: '#/definitions/Product'
            type: array
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/GenericError'
        "406":
          description: not acceptable error
          schema:
            $ref: '#/definitions/ValidationError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/GenericError'
      tags:
      - createProduct
    put:
      consumes:
      - application/json
      description: Update a product
      operationId: updateProduct
      parameters:
      - description: body of request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Product'
      produces:
      - application/json
      responses:
        "200":
          description: product updated successfully
          schema:
            items:
              $ref: '#/definitions/Product'
            type: array
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/GenericError'
        "406":
          description: request not acceptable error
          schema:
            $ref: '#/definitions/ValidationError'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/GenericError'
      tags:
      - updateProduct
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product
      operationId: deleteProduct
      parameters:
      - description: id of product to delete
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: product updated successfully
          schema:
            type: boolean
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/GenericError'
      tags:
      - deleteProduct
  /products/{name}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific product by its name
      operationId: getProductByName
      parameters:
      - description: name of product
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: product found
          schema:
            $ref: '#/definitions/Product'
        "400":
          description: bad request
          schema:
            $ref: '#/definitions/GenericError'
      tags:
      - productByName
produces:
- application/json
schemes:
- http
security:
- api_key: []
swagger: "2.0"
